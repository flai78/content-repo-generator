name: run-python
    
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
      # schedule:
      #   - cron: "0 0 * * *" #runs at 00:00 UTC everyday
    
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # in this example, there is a newer version already installed, 3.7.7, so the older version will be downloaded
        python-version: [pypy-3.7]

    steps:
      - name: checkout repo content
        uses: actions/checkout@v2 # checkout the repository content to github runner.
      - name: setup python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }} #install the python needed
      # - name: execute py script # run the run.py to get the latest dat
      #   id: py-script
      #   run: |
      #     python3 -m pip install --user pipenv
      #     pipenv install requests
      #     echo ::set-output name=http_result:: | $(pipenv run python run.py)
      #   env:
      #     key: ${{ secrets.DATA_KEY }} # if run.py requires passwords..etc, set it as secrets
      # - name: write script result
      #   run: |
      #     echo 'The http result is ${{ steps.py-script.outputs.http_result }}'
      - name: py script 2
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            python3 -m pip install --user pipenv
            pipenv install requests
            return pipenv run python run.py
      # - name: Get result
      #   run: echo "${{steps.py-script.outputs.result}}"
      
      # - uses: "finnp/create-file-action@master"
      #   name: create File
      #   env:
      #     FILE_NAME: "tmp/fileName.txt"
      #     FILE_DATA: ${{ steps.query.outputs.response }}
